openapi: 3.0.0
info:
  title: Articles API
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /articles:
    get:
      summary: Get all articles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      summary: Create a new article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
  /articles/{id}:
    get:
      summary: Get an article by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the article
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
    put:
      summary: Update an existing article by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
    delete:
      summary: Delete an article by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the article
      responses:
        '204':
          description: No content
  /articles/{id}/comments:
    get:
      summary: Get all comments for an article by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the article
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '404':
          description: Article not found
    post:
      summary: Add a new comment to an article by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Article not found
  /comments/{id}:
    get:
      summary: Get a comment by ID
      parameters:
        - in: path
                   name: id
          schema:
            type: string
          required: true
          description: ID of the comment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        author:
          type: string
      required:
        - id
        - title
        - content
        - author
    Comment:
      type: object
      properties:
        id:
          type: string
        articleId:
          type: string
        content:
          type: string
        author:
          type: string
      required:
        - id
        - articleId
        - content
        - author
